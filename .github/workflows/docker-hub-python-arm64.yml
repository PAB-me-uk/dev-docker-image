name: ARM64 Build and Push Docker Image to Docker Hub

on:
  push:
    branches: ['arm64-build']
  workflow_dispatch:

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: docker.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: pabuk/dev-python-testing

jobs:
  build-and-test:
    if: github.repository == 'PAB-me-uk/dev-docker-image'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        PYTHON_VERSION:
          # - '3.9'
          # - '3.10'
          # - '3.11'
          # - '3.12'
          - '3.13'
    steps:
      - uses: actions/checkout@v4
      - name: Docker Login
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
      - name: Build the Docker image
        run: docker build . -t ${{ env.IMAGE_NAME }}:${{ matrix.PYTHON_VERSION }}-amd64 --no-cache --force-rm --build-arg IMAGE_PYTHON_VERSION=${{ matrix.PYTHON_VERSION }}
      - name: Test the Docker image
        run: docker run --rm -t ${{ env.IMAGE_NAME }}:${{ matrix.PYTHON_VERSION }}-amd64 bin/zsh -c "source ~/.zshrc && check-container"
      - name: Push the Docker image
        run: docker push ${{ env.IMAGE_NAME }}:${{ matrix.PYTHON_VERSION }}-amd64
  build-and-test-arm64:
    if: github.repository == 'PAB-me-uk/dev-docker-image'
    runs-on: ubuntu-24.04-arm
    strategy:
      matrix:
        PYTHON_VERSION:
          # - '3.9'
          # - '3.10'
          # - '3.11'
          # - '3.12'
          - '3.13'
    steps:
      - uses: actions/checkout@v4
      - name: Docker Login
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
      - name: Build the Docker image
        run: docker build . -t ${{ env.IMAGE_NAME }}:${{ matrix.PYTHON_VERSION }}-arm64v8 --no-cache --force-rm --build-arg IMAGE_PYTHON_VERSION=${{ matrix.PYTHON_VERSION }}
      - name: Test the Docker image
        run: docker run --rm -t ${{ env.IMAGE_NAME }}:${{ matrix.PYTHON_VERSION }}-arm64v8 bin/zsh -c "source ~/.zshrc && check-container"
      - name: Push the Docker image
        run: docker push ${{ env.IMAGE_NAME }}:${{ matrix.PYTHON_VERSION }}-arm64v8
  combine-manifests:
    needs: [build-and-test, build-and-test-arm64]
    if: github.repository == 'PAB-me-uk/dev-docker-image'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        PYTHON_VERSION:
          # - '3.9'
          # - '3.10'
          # - '3.11'
          # - '3.12'
          - '3.13'
    steps:
      - name: Docker Login
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
      - name: Create Combined Manifest
        run: |
          docker manifest create \
          ${{ env.IMAGE_NAME }}:${{ matrix.PYTHON_VERSION }} \
          --amend ${{ env.IMAGE_NAME }}:${{ matrix.PYTHON_VERSION }}-amd64 \
          --amend ${{ env.IMAGE_NAME }}:${{ matrix.PYTHON_VERSION }}-arm64v8
      - name: Push Combined Manifest
        run: docker manifest push ${{ env.IMAGE_NAME }}:${{ matrix.PYTHON_VERSION }}
